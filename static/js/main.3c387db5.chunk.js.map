{"version":3,"sources":["logo.png","components/custom-button/custom-button.tsx","modules/game/square/square.tsx","modules/game/board/board.tsx","modules/game/board/functions/calculate-winner.tsx","modules/game/game.tsx","modules/game/board/functions/validate-end-game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomButton","props","className","class","onClick","label","Square","Board","winner","status","includes","gameOver","classBold","classWinner","classGameOver","squareIsPartOfWin","lineWin","index","line","squares","calculateWinner","lines","i","length","a","b","c","Game","useState","Array","fill","setSquares","xIsNext","setXIsNext","filter","square","validateEndGame","newSquares","slice","handleClick","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c387db5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6232985c.png\";","import React from \"react\";\nimport {PropsCustomButton} from \"./props-custom-button\";\n\nconst CustomButton = (props: PropsCustomButton) => {\n\treturn (\n\t\t<button className={props.class} onClick={props.onClick}>\n\t\t\t{props.label}\n\t\t</button>\n\t);\n}\n\nexport default CustomButton;","import React from \"react\";\nimport {PropsCustomButton} from \"components/custom-button/props-custom-button\";\nimport CustomButton from \"components/custom-button/custom-button\";\n\nexport default function Square(props: PropsCustomButton) {\n\n\treturn (\n\t\t<CustomButton class={props.class} label={props.label} onClick={props.onClick}/>\n\t);\n}","import Square from \"../square/square\";\nimport React from \"react\";\nimport {BoardProps} from \"./board-props\";\n\nconst Board = (props: BoardProps) => {\n\tconst winner = props.status.includes('Ganador');\n\tconst gameOver = props.status.includes('Empate');\n\n\t//class\n\tconst classBold = winner || gameOver ? 'bold' : '';\n\tconst classWinner = winner ? 'winner' : '';\n\tconst classGameOver =  gameOver ? 'game-over' : '';\n\n\tconst squareIsPartOfWin = (lineWin: number[], index:number): string =>{\n\t\tif(lineWin.includes(index)){\n\t\t\treturn 'winner'\n\t\t}\n\t\treturn '';\n\t}\n\n\treturn (\n\n\n\t\t<div>\n\t\t\t<div className={`status ${classBold} ${classWinner} ${classGameOver}`}>{props.status}</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 0)}`} label={props.squares[0]} onClick={() => {\n\t\t\t\t\tprops.onClick(0)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 1)}`} label={props.squares[1]} onClick={() => {\n\t\t\t\t\tprops.onClick(1)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 2)}`} label={props.squares[2]} onClick={() => {\n\t\t\t\t\tprops.onClick(2)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 3)}`} label={props.squares[3]} onClick={() => {\n\t\t\t\t\tprops.onClick(3)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 4)}`} label={props.squares[4]} onClick={() => {\n\t\t\t\t\tprops.onClick(4)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 5)}`} label={props.squares[5]} onClick={() => {\n\t\t\t\t\tprops.onClick(5)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 6)}`} label={props.squares[6]} onClick={() => {\n\t\t\t\t\tprops.onClick(6)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 7)}`} label={props.squares[7]} onClick={() => {\n\t\t\t\t\tprops.onClick(7)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={`square ${squareIsPartOfWin(props.winner.line, 8)}`} label={props.squares[8]} onClick={() => {\n\t\t\t\t\tprops.onClick(8)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\nexport default Board;","import {WinnerProps} from \"../board-props\";\n\nexport function calculateWinner(squares: string[]): WinnerProps {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn {line: lines[i], winner: squares[a]};\n\t\t}\n\t}\n\treturn {line: [], winner: ''};\n}","import Board from \"./board/board\";\nimport React, {useState} from \"react\";\nimport CustomButton from \"components/custom-button/custom-button\";\nimport {calculateWinner} from \"./board/functions/calculate-winner\";\nimport {validateEndGame} from \"./board/functions/validate-end-game\";\n\nconst Game = () => {\n\tconst [squares, setSquares] = useState<string[]>(Array(9).fill(''));\n\n\tconst [xIsNext, setXIsNext] = useState<boolean>(true);\n\n\n\tconst winner = calculateWinner(squares);\n\tconst gameOver = validateEndGame(squares);\n\tlet status;\n\tif (winner.line.length>0) {\n\t\tstatus = 'Ganador: ' + winner.winner;\n\t} else {\n\t\tif (gameOver) {\n\t\t\tstatus = 'Â¡Empate!';\n\t\t} else {\n\t\t\tstatus = 'Turno: ' + (xIsNext ? 'X' : 'O');\n\t\t}\n\n\t}\n\n\tconst handleClick = (index: number) => {\n\t\tlet newSquares = squares.slice();\n\n\t\tconst winnerProps = calculateWinner(squares);\n\t\t// si hay jugador o un cuadrado ya ha sido llenado\n\t\tif (winnerProps.line.length >0 || squares[index]) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tnewSquares[index] = xIsNext ? 'X' : 'O';\n\t\tsetSquares(newSquares);\n\t\tsetXIsNext(!xIsNext)\n\t}\n\n\tconst gameRestart = () => {\n\t\tsetSquares(Array(9).fill(''));\n\t\tsetXIsNext(true)\n\t}\n\n\treturn (\n\t\t<div className=\"game\">\n\t\t\t<div className=\"game-board\">\n\t\t\t\t<Board squares={squares} winner={winner} onClick={(index) => handleClick(index)} status={status}/>\n\t\t\t</div>\n\t\t\t<div className=\"game-restart\">\n\t\t\t\t<CustomButton class={`button-restart ${!!winner.winner || gameOver ? \"bold\" : \"\"}`} label=\"Reiniciar\"\n\t\t\t\t              onClick={() => {\n\t\t\t\t\t              gameRestart()\n\t\t\t\t              }}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default Game;","export function validateEndGame(squares: string[]): boolean {\n\treturn squares.filter(square => square === '').length <= 0\n}\n","import React from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport Game from \"./modules/game/game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Game/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}