{"version":3,"sources":["logo.svg","components/custom-button/custom-button.tsx","modules/game/square/square.tsx","modules/game/board/board.tsx","modules/game/board/calculate-winner.tsx","modules/game/game.tsx","modules/game/board/validate-end-game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomButton","props","className","class","onClick","label","Square","Board","status","squares","calculateWinner","lines","i","length","a","b","c","Game","useState","Array","fill","setSquares","xIsNext","setXIsNext","winner","isEnd","filter","square","validateEndGame","index","newSquares","slice","handleClick","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAAe,G,KAAA,IAA0B,kC,sBCW1BA,EARM,SAACC,GACrB,OACC,wBAAQC,UAAWD,EAAME,MAAOC,QAASH,EAAMG,QAA/C,SACEH,EAAMI,SCFK,SAASC,EAAOL,GAE9B,OACC,cAAC,EAAD,CAAcE,MAAOF,EAAME,MAAOE,MAAOJ,EAAMI,MAAOD,QAASH,EAAMG,UCHvE,IA6CeG,EA7CD,SAACN,GAGd,OAGC,gCACC,qBAAKC,UAAU,SAAf,SAAyBD,EAAMO,SAC/B,sBAAKN,UAAU,YAAf,UACC,cAACI,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,SAGhB,sBAAKF,UAAU,YAAf,UACC,cAACI,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,SAGhB,sBAAKF,UAAU,YAAf,UACC,cAACI,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,MAEf,cAACE,EAAD,CAAQH,MAAO,SAAUE,MAAOJ,EAAMQ,QAAQ,GAAIL,QAAS,WAC1DH,EAAMG,QAAQ,aC1CZ,SAASM,EAAgBD,GAW/B,IAVA,IAAME,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACpBD,EAAMC,GADc,GAC/BE,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIP,EAAQK,IAAML,EAAQK,KAAOL,EAAQM,IAAMN,EAAQK,KAAOL,EAAQO,GACrE,OAAOP,EAAQK,GAGjB,MAAO,GCXR,IAoDeG,EApDF,WAAO,IAOfT,EAPc,EACYU,mBAAmBC,MAAM,GAAGC,KAAK,KAD7C,mBACXX,EADW,KACFY,EADE,OAGYH,oBAAkB,GAH9B,mBAGXI,EAHW,KAGFC,EAHE,KAKZC,EAASd,EAAgBD,GACzBgB,ECZA,SAAyBhB,GAC/B,OAAOA,EAAQiB,QAAO,SAAAC,GAAM,MAAe,KAAXA,KAAed,QAAU,EDW3Ce,CAAgBnB,GAG7BD,EADGgB,EACM,YAAcA,EAEnBC,EACM,cAEA,WAAaH,EAAU,IAAM,KAuBxC,OACC,sBAAKpB,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACC,cAAC,EAAD,CAAOO,QAASA,EAASL,QAAS,SAACyB,GAAD,OArBjB,SAACA,GACpB,IAAIC,EAAarB,EAAQsB,QAGrBrB,EAAgBD,IAAYA,EAAQoB,KAKxCC,EAAWD,GAASP,EAAU,IAAM,IACpCD,EAAWS,GACXP,GAAYD,IAUmCU,CAAYH,IAAQrB,OAAQA,MAE1E,qBAAKN,UAAU,eAAf,SACC,cAAC,EAAD,CAAcC,MAAO,iBAAkBE,MAAM,YAAYD,QAAS,WATpEiB,EAAWF,MAAM,GAAGC,KAAK,cExBZa,MAXf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKgC,IAAKC,EAAMjC,UAAU,WAAWkC,IAAI,SACzC,cAAC,EAAD,UCIOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4c955204.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport {PropsCustomButton} from \"./props-custom-button\";\n\nconst CustomButton = (props: PropsCustomButton) => {\n\treturn (\n\t\t<button className={props.class} onClick={props.onClick}>\n\t\t\t{props.label}\n\t\t</button>\n\t);\n}\n\nexport default CustomButton;","import React from \"react\";\nimport {PropsCustomButton} from \"components/custom-button/props-custom-button\";\nimport CustomButton from \"components/custom-button/custom-button\";\n\nexport default function Square(props: PropsCustomButton) {\n\n\treturn (\n\t\t<CustomButton class={props.class} label={props.label} onClick={props.onClick}/>\n\t);\n}","import Square from \"../square/square\";\nimport React from \"react\";\nimport {BoardProps} from \"./board-props\";\n\nconst Board = (props: BoardProps) => {\n\n\n\treturn (\n\n\n\t\t<div>\n\t\t\t<div className=\"status\">{props.status}</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={\"square\"} label={props.squares[0]} onClick={() => {\n\t\t\t\t\tprops.onClick(0)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[1]} onClick={() => {\n\t\t\t\t\tprops.onClick(1)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[2]} onClick={() => {\n\t\t\t\t\tprops.onClick(2)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={\"square\"} label={props.squares[3]} onClick={() => {\n\t\t\t\t\tprops.onClick(3)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[4]} onClick={() => {\n\t\t\t\t\tprops.onClick(4)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[5]} onClick={() => {\n\t\t\t\t\tprops.onClick(5)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t\t<div className=\"board-row\">\n\t\t\t\t<Square class={\"square\"} label={props.squares[6]} onClick={() => {\n\t\t\t\t\tprops.onClick(6)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[7]} onClick={() => {\n\t\t\t\t\tprops.onClick(7)\n\t\t\t\t}}/>\n\t\t\t\t<Square class={\"square\"} label={props.squares[8]} onClick={() => {\n\t\t\t\t\tprops.onClick(8)\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\nexport default Board;","export function calculateWinner(squares: string[]):string {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\treturn '';\n}","import Board from \"./board/board\";\nimport React, {useState} from \"react\";\nimport CustomButton from \"components/custom-button/custom-button\";\nimport {calculateWinner} from \"./board/calculate-winner\";\nimport {validateEndGame} from \"./board/validate-end-game\";\n\nconst Game = () => {\n\tconst [squares, setSquares] = useState<string[]>(Array(9).fill(''));\n\n\tconst [xIsNext, setXIsNext] = useState<boolean>(true);\n\n\tconst winner = calculateWinner(squares);\n\tconst isEnd = validateEndGame(squares);\n\tlet status;\n\tif (winner) {\n\t\tstatus = 'Ganador: ' + winner;\n\t} else {\n\t\tif (isEnd) {\n\t\t\tstatus = 'Â¡Empate!';\n\t\t} else {\n\t\t\tstatus = 'Turno: ' + (xIsNext ? 'X' : 'O');\n\t\t}\n\n\t}\n\n\tconst handleClick = (index: number) => {\n\t\tlet newSquares = squares.slice();\n\n\t\t// si hay jugador o un cuadrado ya ha sido llenado\n\t\tif (calculateWinner(squares) || squares[index]) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tnewSquares[index] = xIsNext ? 'X' : 'O';\n\t\tsetSquares(newSquares);\n\t\tsetXIsNext(!xIsNext)\n\t}\n\n\tconst gameRestart = () => {\n\t\tsetSquares(Array(9).fill(''));\n\t}\n\n\treturn (\n\t\t<div className=\"game\">\n\t\t\t<div className=\"game-board\">\n\t\t\t\t<Board squares={squares} onClick={(index) => handleClick(index)} status={status}/>\n\t\t\t</div>\n\t\t\t<div className=\"game-restart\">\n\t\t\t\t<CustomButton class={\"button-restart\"} label=\"Reiniciar\" onClick={() => {\n\t\t\t\t\tgameRestart()\n\t\t\t\t}}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default Game;","export function validateEndGame(squares: string[]): boolean {\n\treturn squares.filter(square => square === '').length <= 0\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from \"./modules/game/game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Game/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}